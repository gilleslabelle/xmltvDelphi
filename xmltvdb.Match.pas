{ ******************************************************* }
{ *
  {* uMatch.pas
  {* Delphi Implementation of the Class Match
  {* Generated by Enterprise Architect
  {* Created on:      09-févr.-2015 11:44:54
  {* Original author: Labelleg
  {*
  {******************************************************* }

unit xmltvdb.Match;

interface

uses System.Generics.Collections, xmltvdb.MatchAccuracy, xmltvdb.TVDBEpisode,
  xmltvdb.TVDBSeries, System.Classes;

type

  IMatch = interface
    function Getaccuracy: TMatchAccuracy;
    function GetmatchingEpisodes: TVDBEpisodeColl;
    function Getseries: ITVDBSeries;

//    function CompareTo(Value: IMatch): Integer;

  end;

  TMatch = class (TInterfacedObject,IMatch)

  strict private
    Faccuracy: TMatchAccuracy;
    FmatchingEpisodes: TVDBEpisodeColl;
    Fseries: ITVDBSeries;
  public

    function Getaccuracy: TMatchAccuracy;
    function GetmatchingEpisodes: TVDBEpisodeColl;
    function Getseries: ITVDBSeries;

    function CompareTo(Value: IMatch): Integer;

    constructor Create(matchAccuracy: TMatchAccuracy; series: ITVDBSeries; matchingEpisodes: TVDBEpisodeColl);

    destructor Destroy; override;

  end;



  TMatchColl = class(TList<IMatch>)
////  TMatchColl = class(TObjectList<TMatch>)
  public
    procedure Sort; overload;
    constructor Create();
    destructor Destroy; override;

//    class function Compare(valeur1,valeur2 : IMatch):integer;
  end;

implementation

uses
  System.SysUtils, System.Generics.Defaults, System.Math;

{ implementation of Match }

function TMatch.CompareTo(Value: IMatch): Integer;
begin

//  Result := Self.Faccuracy. .ge   return this.accuracy.compareTo(accuracy);
  raise Exception.Create('Code no complété');

end;

constructor TMatch.Create(matchAccuracy: TMatchAccuracy; series: ITVDBSeries; matchingEpisodes: TVDBEpisodeColl);
begin
  inherited Create;
  Self.FmatchingEpisodes := matchingEpisodes;
  Self.Faccuracy := matchAccuracy;
  Self.Fseries := series;

end;

destructor TMatch.Destroy;
begin

  inherited;
end;


function TMatch.Getaccuracy: TMatchAccuracy;
begin
  Result:= Faccuracy;
end;

function TMatch.GetmatchingEpisodes: TVDBEpisodeColl;
begin
  Result := FmatchingEpisodes;
end;

function TMatch.Getseries: ITVDBSeries;
begin
  Result:= Fseries;
end;

{ TMatchColl }

//class function TMatchColl.Compare(valeur1, valeur2: IMatch): integer;
//begin
//    raise Exception.Create('Error Message');
//end;

constructor TMatchColl.Create;
begin
  inherited Create;

  //OwnsObjects := true;
end;
//
destructor TMatchColl.Destroy;
begin

  inherited;
end;

procedure TMatchColl.Sort;
begin
      Self.Sort( TComparer<IMatch>.Construct(
      function(const Item1,Item2:IMatch): Integer
      begin
         Result :=  CompareValue( Ord( Item1.Getaccuracy) ,Ord(Item2.Getaccuracy));
      end));
end;

end.
